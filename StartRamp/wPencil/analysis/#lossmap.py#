import numpy as np
import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import linecache
import scipy.io
import glob
import operator
import sys
 
## WARM LHC REGIONS (can be put into an external file, but for convenience we leave it here)
 
lhc_warm=np.array([[  0.00000000e+00,   2.25365000e+01],
       [  5.48530000e+01,   1.52489000e+02],
       [  1.72165500e+02,   1.92400000e+02],
       [  1.99484700e+02,   2.24300000e+02],
       [  3.09545428e+03,   3.15562858e+03],
       [  3.16774008e+03,   3.18843308e+03],
       [  3.21144458e+03,   3.26386758e+03],
       [  3.30990008e+03,   3.35497408e+03],
       [  3.40100558e+03,   3.45342858e+03],
       [  3.47644008e+03,   3.49406558e+03],
       [  3.50588528e+03,   3.56831858e+03],
       [  6.40540880e+03,   6.45791380e+03],
       [  6.46877850e+03,   6.85951380e+03],
       [  6.87037850e+03,   6.92353380e+03],
       [  9.73590702e+03,   9.82473052e+03],
       [  9.83083202e+03,   9.86173052e+03],
       [  9.87873202e+03,   9.93998552e+03],
       [  9.95054802e+03,   1.00434620e+04],
       [  1.00540245e+04,   1.01152780e+04],
       [  1.01322795e+04,   1.01639705e+04],
       [  1.01700720e+04,   1.02576030e+04],
       [  1.31049892e+04,   1.31298045e+04],
       [  1.31368892e+04,   1.31571237e+04],
       [  1.31768002e+04,   1.32716472e+04],
       [  1.33067527e+04,   1.33518257e+04],
       [  1.33869312e+04,   1.34817782e+04],
       [  1.35014547e+04,   1.35227845e+04],
       [  1.35298692e+04,   1.35546845e+04],
       [  1.63946378e+04,   1.64508713e+04],
       [  1.64569728e+04,   1.64872713e+04],
       [  1.64933728e+04,   1.68308713e+04],
       [  1.68369728e+04,   1.68672713e+04],
       [  1.68733728e+04,   1.69282948e+04],
       [  1.97348504e+04,   1.97606997e+04],
       [  1.97715644e+04,   2.02179087e+04],
       [  2.02287734e+04,   2.02529744e+04],
       [  2.30899797e+04,   2.31385770e+04],
       [  2.31503967e+04,   2.31713755e+04],
       [  2.31943870e+04,   2.32468100e+04],
       [  2.32928425e+04,   2.33379155e+04],
       [  2.33839480e+04,   2.34363710e+04],
       [  2.34593825e+04,   2.34800825e+04],
       [  2.34921940e+04,   2.35531160e+04],
       [  2.64334879e+04,   2.64583032e+04],
       [  2.64653879e+04,   2.64867177e+04],
       [  2.65063942e+04,   2.66012412e+04],
       [  2.66363467e+04,   2.66588832e+04]])
 
hllhc_warm=np.array([[  0.00000000e+00,   2.25000000e+01],
       [  8.31530000e+01,   1.36689000e+02],
       [  1.82965500e+02,   2.01900000e+02],
       [  2.10584700e+02,   2.24300000e+02],
       [  3.09545428e+03,   3.15562858e+03],
       [  3.16774008e+03,   3.18843308e+03],
       [  3.21144458e+03,   3.26386758e+03],
       [  3.30990008e+03,   3.35497408e+03],
       [  3.40100558e+03,   3.45342858e+03],
       [  3.47644008e+03,   3.49406558e+03],
       [  3.50588528e+03,   3.56831858e+03],
       [  6.40540880e+03,   6.45791380e+03],
       [  6.46877850e+03,   6.85951380e+03],
       [  6.87037850e+03,   6.92353380e+03],
       [  9.73590702e+03,   9.82473052e+03],
       [  9.83083202e+03,   9.86173052e+03],
       [  9.87873202e+03,   9.93998552e+03],
       [  9.95054802e+03,   1.00434620e+04],
       [  1.00540245e+04,   1.01152780e+04],
       [  1.01322795e+04,   1.01639705e+04],
       [  1.01700720e+04,   1.02576030e+04],
       [  1.31036000e+04,   1.31200300e+04],
       [  1.31238892e+04,   1.31471237e+04],
       [  1.31918002e+04,   1.32476472e+04],
       [  1.33067940e+04,   1.33520892e+04],
       [  1.34110312e+04,   1.34670082e+04],
       [  1.35114547e+04,   1.35357845e+04],
       [  1.35388592e+04,   1.35552845e+04],
       [  1.63946378e+04,   1.64508713e+04],
       [  1.64569728e+04,   1.64872713e+04],
       [  1.64933728e+04,   1.68308713e+04],
       [  1.68369728e+04,   1.68672713e+04],
       [  1.68733728e+04,   1.69282948e+04],
       [  1.97348504e+04,   1.97606997e+04],
       [  1.97715644e+04,   2.02179087e+04],
       [  2.02287734e+04,   2.02529744e+04],
       [  2.30899797e+04,   2.31385770e+04],
       [  2.31503967e+04,   2.317137mpVal in zip(bins_warm,hist_warm):
            oFile.write( '%13.4f %13.4E \n' % (tmpBin,tmpVal) )
    #
    oFile.write( '\n\n' )
    oFile.write( '# collimator losses - total: %i \n' % ( totcollosses1 ) )
    if ( plotCounts ):
        oFile.write( '# s_min [m], s_max[m], counts [] \n' )
        for k 